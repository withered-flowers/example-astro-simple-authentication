---
// This is an CSR Page, so we need to set prerender to true
export const prerender = true;

import BaseLayout from "@/layouts/BaseLayout.astro";
import CenteredContainer from "@/components/CenteredContainer.astro";
---

<BaseLayout title="CSR - Astro (Public)">
  <CenteredContainer>
    <form
      class="flex w-10/12 flex-col gap-4 rounded bg-gray-200 p-4 md:w-1/2 xl:w-1/4"
      id="form-login"
    >
      <p class="text-xl font-semibold">Login (CSR - Astro)</p>
      <label for="email" class="w-full">Email</label>
      <input
        type="email"
        id="email"
        name="email"
        class="rounded px-4 py-2"
        placeholder="admin@mail.com"
        required
        aria-required="true"
      />

      <label for="password" class="w-full">Password</label>
      <input
        type="password"
        id="password"
        name="password"
        placeholder="administrator"
        class="rounded px-4 py-2"
        minlength="8"
        required
        aria-required="true"
      />

      <section class="flex w-full justify-between">
        <button
          type="submit"
          class="rounded bg-blue-500 px-4 py-2 font-bold text-white transition-colors duration-300 hover:bg-blue-700"
        >
          Sign In
        </button>
        <button
          disabled
          class="rounded bg-blue-500 px-4 py-2 font-bold text-white transition-colors duration-300 hover:bg-blue-700 disabled:cursor-not-allowed disabled:bg-red-400 disabled:opacity-50"
        >
          Register
        </button>
      </section>
    </form>
    <!-- This will flash the error from the Server Response if exist -->
    <section class="hidden animate-pulse text-red-400" id="flash-error">
    </section>
  </CenteredContainer>
</BaseLayout>

<script>
  // Treat this as a separate file and import it if you want
  import type {
    LoginError,
    LoginFormData,
    LoginResponse,
  } from "@/definitions/global";
  import { navigate } from "astro:transitions/client";

  const doFormSubmit = async (event: SubmitEvent) => {
    event.preventDefault();

    try {
      const email = document.getElementById("email") as HTMLInputElement;
      const password = document.getElementById("password") as HTMLInputElement;

      const bodyData: LoginFormData = {
        email: email.value,
        password: password.value,
      };

      const response = await fetch(`/auth-server/api/login`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(bodyData),
      });
      const responseJson: LoginResponse & LoginError = await response.json();

      /*
      DISCLAIMER: 
      Since we're using a simple JWT Authentication, we're not using any refresh token, so the token will expire in 1 hour.
      
      If you want to use a refresh token, you can use the same approach as the SSR Page, but you need to store the refresh token in the localStorage.
      Then, you can use the refresh token to get a new access token when the access token is expired.
    */

      // Since this is a full CSR Page, and the server is not involved at all for storing credentials, We need to store the token in the localStorage
      if (!responseJson.data) {
        throw new Error(responseJson.error);
      }

      localStorage.setItem("token", responseJson.data.token);

      // Redirect to the protected
      navigate("/csr/astro/protected", {
        history: "push",
      });
    } catch (err) {
      let errorSection = document.getElementById("flash-error") as HTMLElement;

      if (err instanceof Error) {
        errorSection.innerText = err.message;
        errorSection.classList.remove("hidden");
      }
    }
  };

  // Since we're using the ViewTransition, we need to wait until the page is loaded
  document.addEventListener("astro:page-load", () => {
    document
      .getElementById("form-login")
      ?.addEventListener("submit", doFormSubmit);
  });
</script>
